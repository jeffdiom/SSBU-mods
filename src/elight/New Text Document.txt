#[acmd_func(
    battle_object_category = BATTLE_OBJECT_CATEGORY_FIGHTER, 
    battle_object_kind = FIGHTER_KIND_ELIGHT, 
    animation = "throw_lw",
    animcmd = "game_throwlw")]
pub fn elight_throwlw(fighter: &mut L2CFighterCommon) {
    acmd!
    ({
            frame(Frame=1)
            if(is_excute)
            {
            FT_LEAVE_NEAR_OTTOTTO(-2.5, 2.5)
            ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, ID=0, Damage=3.0, Angle=80, KBG=100, FKB=0, BKB=65, Hitlag=0.5, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
            ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=3.0, Angle=361, KBG=100, FKB=0, BKB=60, Hitlag=0.5, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
            }
            frame(Frame=10)
            IS_EXIST_ARTICLE(17456 as i32)
            //if(0x353770(false))
            {
                if(is_excute)
                {
                //methodlib::L2CValue::as_hash()const(17456, 60344, 0x07439e926b, 3.33, 3.33, false, false, 0, false, true, false)
                ArticleModule::add_motion_partial(17456, 60344, Hash40::new_raw(0x07439e926b), 3.33, 3.33, false, false, 0, false, true, false)
                }
            }
            StatusModule::is_changing()
            //if(0x353770(false))
            //{
                if(is_excute)
                {
                    WorkModule::on_flag(Flag=60348)
                }
            //}
            frame(0, 20)
            if(is_excute)
            {
                ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=4.0, Angle=361, KBG=150, FKB=0, BKB=30, Size=4.5, X=0.0, Y=3.0, Z=-2.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
                AttackModule::set_catch_only_all(true, false)
            }
            wait(Frames=1)
            if(is_excute)
            {
            CHECK_FINISH_CAMERA(0.0, 0.0)
            //FighterCutInManager::set_throw_finish_zoom_rate(1.2)
            //FighterCutInManager::set_throw_finish_offset(0, 0, 0)
            }
            wait(Frames=4)
            if(is_excute)
            {
                AttackModule::clear_all()
                ATK_HIT_ABS(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, hash40("throw"), 
                WorkModule::get_int64(module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT), 
                WorkModule::get_int64(module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP), 
                WorkModule::get_int64(module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO))
            }
            frame(Frame=42)
            IS_EXIST_ARTICLE(17456 as i32)
            //if(0x353770(false))
            //{
                if(is_excute)
                {
                    //methodlib::L2CValue::as_hash()const(17456, 60344, 0x08183db0f4, 3.33, 3.33, false, false, 0, false, true, false)
                    ArticleModule::add_motion_partial(17456, 60344, Hash40::new_raw(0x08183db0f4), 3.33, 3.33, false, false, 0, false, true, false)
                }
            //}
                StatusModule::is_changing()
            //if(0x353770(false))
            //{
                if(is_excute)
                {
                    WorkModule::on_flag(Flag=60348)
                }
            //}

    });
}
