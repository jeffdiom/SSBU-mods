#[acmd_func(
    battle_object_category = BATTLE_OBJECT_CATEGORY_FIGHTER, 
    battle_object_kind = FIGHTER_KIND_INKLING, 
    animation = "throw_hi",
    animcmd = "game_throwhi")]
pub fn inkling_throwhi(fighter: &mut L2CFighterCommon) {
    acmd!
    ({
        if(is_excute){
            WorkModule::on_flag(Flag=FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_NO_FLIP_SQUID)
            }
            if (WorkModule::is_flag(FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID)==false){
            if(is_excute){
            ArticleModule::generate_article(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID)
            }
            }
            MotionModule::motion_kind()
            MotionModule::frame(0x00000002b0)
            MotionModule::rate(-1594717753)
            sv_battle_object::as_hash__const(-1594717753, FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false)
            ArticleModule::change_motion()
            if(is_excute){
            ArticleModule::set_frame(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID)
            ArticleModule::set_rate(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID)
            ArticleModule::set_visibility_whole(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false)
            WorkModule::on_flag(Flag=FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID)
            StatusModule::status_kind()
            if (StatusModule::prev_status_kind(module_accessor,0) == *FIGHTER_STATUS_KIND_REBIRTH) {
            WorkModule::on_flag(Flag=FIGHTER_INSTANCE_WORK_ID_FLAG_FORCE_LOUPE)
            }
            }
            get_value_float(0, SO_VAR_FLOAT_LR)
            if(0x13d360(0, 0)){
            if(is_excute){
            sv_battle_object::as_hash__const(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, hash40("throw_hi_l"))
            ArticleModule::change_motion()
            }
            else{
            if(is_excute){
            sv_battle_object::as_hash__const(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, hash40("throw_hi_r"))
            ArticleModule::change_motion()
            }
            }
            }
            if(is_excute){
            ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, ID=0, Damage=3.0, Angle=90, KBG=65, FKB=0, BKB=70, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
            ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=3.0, Angle=361, KBG=100, FKB=0, BKB=40, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
            }
            frame(Frame=7)
            if(is_excute){
            ArticleModule::set_visibility_whole(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, true)
            }
            frame(Frame=12)
            if(is_excute){
            VisibilityModule::set_whole(false)
            }
            frame(Frame=21)
            if(is_excute){
            ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=361, KBG=30, FKB=0, BKB=80, Size=5.5, X=0.0, Y=18.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_HEAD)
            AttackModule::set_catch_only_all(true, false)
            CHECK_FINISH_CAMERA(1, 25)
            }
            frame(Frame=22)
            if(is_excute){
            ATK_HIT_ABS(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, hash40("throw"), 
            WorkModule::get_int64(module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT), 
            WorkModule::get_int64(module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP), 
            WorkModule::get_int64(module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO))
            AttackModule::clear_all()
            }
            frame(Frame=30)
            if(is_excute){
            VisibilityModule::set_whole(true)
            }
            frame(Frame=35)
            if(is_excute){
            ArticleModule::set_visibility_whole(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false)
            }
            
    });
}